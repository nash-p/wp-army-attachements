namespace = wp_supports_army_hab
planet_event = {
	id = wp_supports_army_hab.1
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		planet_event = {
			id = wp_supports_army_hab.2
			days = 1
		}
	}
}

# Applies a buff/debuff to a general if >@wp_army_supports_hab_army_percentage (0.5) of his armies have good/bad habitability on planet
planet_event = {
	id = wp_supports_army_hab.2
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		log = "WP_SUPPORTS.LOG: Started EVENT:wp_supports_army_hab.2"
		set_variable = {
			which = num_atk_army_planet_var
			value = 0
		}
		# Counts the number of attacking armies on a planet, that have a species and not robots
		every_ground_combat_attacker = {
			limit = {
				exists = leader
				exists = species
				species = {
					is_robotic = no
				}
			}
			root = {
				change_variable = {
					which = num_atk_army_planet_var
					value = 1
				}
			}
		}
		# Creates a var to check if up to x the attackers army has met the hab requirements
		set_variable = {
			which = half_num_atk_army_planet_var
			value = num_atk_army_planet_var
		}
		multiply_variable = {
			which = half_num_atk_army_planet_var
			value = @wp_army_supports_hab_army_percentage
		}
		if = {
			limit = {
				count_ground_combat_attacker = {
					count = half_num_atk_army_planet_var
					limit = {
						exists = species
						species = {
							is_robotic = no
						}
						prev = {
							habitability = {
								who = prev.species
								value < @wp_army_supports_hab_debuff_min
							}
						}
					}
				}
			}
			random_ground_combat_attacker = {
				limit = {
					exists = leader
				}
				leader = {
					add_trait = support_trait_hab_bonus
					set_leader_flag = wp_hab_attacking_general_flag
					log = "WP_SUPPORTS.LOG: Added modifier trait wp_army_hab_bonus"
				}
			}
		}
		if = {
			limit = {
				count_ground_combat_attacker = {
					count = half_num_atk_army_planet_var
					limit = {
						exists = species
						species = {
							is_robotic = no
						}
						prev = {
							habitability = {
								who = prev.species
								value < @wp_army_supports_hab_debuff_min
							}
						}
					}
				}
			}
			random_ground_combat_attacker = {
				limit = {
					exists = leader
				}
				leader = {
					add_trait = support_trait_hab_malus
					set_leader_flag = wp_hab_attacking_general_flag
					log = "WP_SUPPORTS.LOG: Added modifier trait support_trait_hab_malus"
				}
			}
		}
	}
}

country_event = {
	id = wp_supports_army_hab.3
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		country_event = {
			id = wp_supports_army_hab.4
			days = 1
		}
	}
}

# Iterates through every commander of a attacking country after the end of ground combat
# Checks if the commander has the flag OR buff/debuff trait, removes both
country_event = {
	id = wp_supports_army_hab.4
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		log = "WP_SUPPORTS.LOG: Started EVENT:wp_supports_army_hab.4"
		every_owned_leader = {
			limit = {
				leader_class = commander
				# if he is on a planet, make sure he isn't in combat, otherwise nothing
				OR = {
					AND = {
						exists = planet
						planet = {
							has_ground_combat = no
						}
					}
					AND = {
						NOT = {
							exists = planet
						}
					}
				}
				# this is probably a double check but :shrug:
				OR = {
					has_trait = support_trait_hab_bonus
					has_trait = support_trait_hab_malus
					has_leader_flag = wp_hab_attacking_general_flag
				}
			}
			remove_trait = support_trait_hab_bonus
			remove_trait = support_trait_hab_malus
			remove_leader_flag = wp_hab_attacking_general_flag
		}
	}
}

# Used for testing the above events, not meant to be in prod
planet_event = {
	id = wp_supports_army_hab.99
	is_triggered_only = yes
	hide_window = yes
	pre_triggers = {
		has_ground_combat = yes
	}
	immediate = {
		log = "WP_SUPPORTS.LOG: Started EVENT:wp_supports_army_hab.4"
		set_variable = {
			which = num_army
			value = 0
		}
		every_ground_combat_attacker = {
			limit = {
				exists = species
			}
			log = "WP_SUPPORTS.LOG: Found an ARMY:[this.GetName]"
			prev = {
				change_variable = {
					which = num_army
					value = 1
				}
			}
		}
		log = "WP_SUPPORTS.LOG: has counted [this.num_army] Armies"
		random_ground_combat_attacker = {
			limit = {
				exists = leader
			}
			leader = {
				add_trait = support_trait_hab_bonus
				set_leader_flag = wp_hab_attacking_general_flag
				log = "WP_SUPPORTS.LOG: Added modifier trait wp_army_hab_bonus"
			}
		}
	}
}
